{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ListComp = () => {\n  _s();\n  const [Apidata, setData] = useState();\n  const fetchApi = async url => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  //   function fetchApi(url) {\n  //     fetch(url)\n  //       .then((data) => {\n  //         console.log(data);\n  //         return data.json();\n  //       })\n  //       .then((item) => {\n  //         console.log(item);\n  //       });\n  //   }\n  useEffect(() => {\n    let url = \"https://api.minebrat.com/api/v1/states\";\n    fetchApi(url);\n  }, []);\n  function temp(city) {\n    let str = \"\";\n    if (!city) {\n      str = \"loading\";\n    } else {\n      city.map(data => {\n        str += `<ul>\n            <li>hello<li> \n            </ul>`;\n      });\n    }\n    return str;\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: console.log(Apidata)\n  }, void 0, false);\n};\n_s(ListComp, \"eXLdh3rmGP2yxHVJrGLSeHwopCM=\");\n_c = ListComp;\nexport default ListComp;\nvar _c;\n$RefreshReg$(_c, \"ListComp\");","map":{"version":3,"names":["React","useEffect","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","ListComp","_s","Apidata","setData","fetchApi","url","response","fetch","data","json","error","console","log","temp","city","str","map","children","_c","$RefreshReg$"],"sources":["C:/Users/Chennamsetty Naveen/Desktop/DESIGN/my-app/src/project4/ListComp.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst ListComp = () => {\r\n  const [Apidata, setData] = useState();\r\n\r\n  const fetchApi = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //   function fetchApi(url) {\r\n  //     fetch(url)\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //         return data.json();\r\n  //       })\r\n  //       .then((item) => {\r\n  //         console.log(item);\r\n  //       });\r\n  //   }\r\n  useEffect(() => {\r\n    let url = \"https://api.minebrat.com/api/v1/states\";\r\n    fetchApi(url);\r\n  }, []);\r\n\r\n  function temp(city) {\r\n    let str = \"\";\r\n    if (!city) {\r\n      str = \"loading\";\r\n    } else {\r\n      city.map((data) => {\r\n        str += `<ul>\r\n            <li>hello<li> \r\n            </ul>`;\r\n      });\r\n    }\r\n    return str;\r\n  }\r\n  return (\r\n    <>\r\n      {console.log(Apidata)}\r\n      {/* <h1>Hello</h1>\r\n      <ul>\r\n        {!Apidata && <h1>loading</h1>}\r\n        {Apidata.length > 0\r\n          ? Apidata.map((eachItem) => {\r\n              const { stateId, stateName, city } = eachItem;\r\n              console.log(city);\r\n              return (\r\n                <li key={stateId}>\r\n                  <h1>{stateId}</h1>\r\n                  <h1>{stateName}</h1>\r\n                  <ul>{temp(city)}</ul>\r\n                </li>\r\n              );\r\n            })\r\n          : null} \r\n      </ul>*/}\r\n    </>\r\n  );\r\n};\r\nexport default ListComp;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnD,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,OAAO,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,CAAC;EAErC,MAAMS,QAAQ,GAAG,MAAOC,GAAG,IAAK;IAC9B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjC,MAAMG,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;MAClCN,OAAO,CAACK,IAAI,CAAC;IACf,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;IACpB;EACF,CAAC;EACD;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACAhB,SAAS,CAAC,MAAM;IACd,IAAIW,GAAG,GAAG,wCAAwC;IAClDD,QAAQ,CAACC,GAAG,CAAC;EACf,CAAC,EAAE,EAAE,CAAC;EAEN,SAASQ,IAAIA,CAACC,IAAI,EAAE;IAClB,IAAIC,GAAG,GAAG,EAAE;IACZ,IAAI,CAACD,IAAI,EAAE;MACTC,GAAG,GAAG,SAAS;IACjB,CAAC,MAAM;MACLD,IAAI,CAACE,GAAG,CAAER,IAAI,IAAK;QACjBO,GAAG,IAAK;AAChB;AACA,kBAAkB;MACZ,CAAC,CAAC;IACJ;IACA,OAAOA,GAAG;EACZ;EACA,oBACEhB,OAAA,CAAAF,SAAA;IAAAoB,QAAA,EACGN,OAAO,CAACC,GAAG,CAACV,OAAO;EAAC,gBAkBrB,CAAC;AAEP,CAAC;AAACD,EAAA,CA9DID,QAAQ;AAAAkB,EAAA,GAARlB,QAAQ;AA+Dd,eAAeA,QAAQ;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}