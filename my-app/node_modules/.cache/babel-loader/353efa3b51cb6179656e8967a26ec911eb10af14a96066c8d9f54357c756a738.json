{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chennamsetty Naveen\\\\Desktop\\\\DESIGN\\\\my-app\\\\src\\\\project4\\\\ListComp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ListComp = () => {\n  _s();\n  const [Apidata, setData] = useState();\n  const fetchApi = async url => {\n    try {\n      const response = await fetch(url);\n      const data = await response.json();\n      setData(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  //   function fetchApi(url) {\n  //     fetch(url)\n  //       .then((data) => {\n  //         console.log(data);\n  //         return data.json();\n  //       })\n  //       .then((item) => {\n  //         console.log(item);\n  //       });\n  //   }\n  useEffect(() => {\n    let url = \"https://api.minebrat.com/api/v1/states\";\n    fetchApi(url);\n  }, []);\n  function cityHandler(e) {\n    console.log(e.target.value);\n    let url = `https://api.minebrat.com/api/v1/states/cities/${e.target.value}`;\n    fetch(url).then(data => {\n      return data.json();\n    }).then(item => {\n      console.log(\"hi i am specific item\", item);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!Apidata && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 20\n    }, this), Apidata && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: Apidata.map(eachItem => {\n        const {\n          stateId,\n          stateName,\n          city\n        } = eachItem;\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: stateId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: stateName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n            onClick: cityHandler,\n            children: city && city.map(item => {\n              return /*#__PURE__*/_jsxDEV(\"option\", {\n                value: item.cityId,\n                children: item.cityName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"radio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this)]\n        }, stateId, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n_s(ListComp, \"eXLdh3rmGP2yxHVJrGLSeHwopCM=\");\n_c = ListComp;\nexport default ListComp;\nvar _c;\n$RefreshReg$(_c, \"ListComp\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","ListComp","_s","Apidata","setData","fetchApi","url","response","fetch","data","json","error","console","log","cityHandler","e","target","value","then","item","children","fileName","_jsxFileName","lineNumber","columnNumber","map","eachItem","stateId","stateName","city","onClick","cityId","cityName","type","_c","$RefreshReg$"],"sources":["C:/Users/Chennamsetty Naveen/Desktop/DESIGN/my-app/src/project4/ListComp.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nconst ListComp = () => {\r\n  const [Apidata, setData] = useState();\r\n\r\n  const fetchApi = async (url) => {\r\n    try {\r\n      const response = await fetch(url);\r\n      const data = await response.json();\r\n      setData(data);\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n  //   function fetchApi(url) {\r\n  //     fetch(url)\r\n  //       .then((data) => {\r\n  //         console.log(data);\r\n  //         return data.json();\r\n  //       })\r\n  //       .then((item) => {\r\n  //         console.log(item);\r\n  //       });\r\n  //   }\r\n  useEffect(() => {\r\n    let url = \"https://api.minebrat.com/api/v1/states\";\r\n    fetchApi(url);\r\n  }, []);\r\n  function cityHandler(e) {\r\n    console.log(e.target.value);\r\n    let url = `https://api.minebrat.com/api/v1/states/cities/${e.target.value}`;\r\n    fetch(url)\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then((item) => {\r\n        console.log(\"hi i am specific item\", item);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {!Apidata && <h1>loading...</h1>}\r\n      {Apidata && (\r\n        <ul>\r\n          {Apidata.map((eachItem) => {\r\n            const { stateId, stateName, city } = eachItem;\r\n            return (\r\n              <li key={stateId}>\r\n                <h1>{stateId}</h1>\r\n                <h1>{stateName}</h1>\r\n\r\n                <select onClick={cityHandler}>\r\n                  {city &&\r\n                    city.map((item) => {\r\n                      return (\r\n                        <option value={item.cityId}>{item.cityName}</option>\r\n                      );\r\n                    })}\r\n                </select>\r\n\r\n                <input type=\"radio\" />\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default ListComp;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}