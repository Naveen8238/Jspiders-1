{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Chennamsetty Naveen\\\\Desktop\\\\DESIGN\\\\my-app\\\\src\\\\Components\\\\project14\\\\Index.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Table, TableHead, TableRow, TableCell, TableBody, TablePagination, IconButton, TextField } from \"@mui/material\";\nimport { Search, Visibility, VisibilityOff } from \"@mui/icons-material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReusableTable = ({\n  columns,\n  data\n}) => {\n  _s();\n  const [page, setPage] = useState(0);\n  const [rowsPerPage, setRowsPerPage] = useState(5);\n  const [searchText, setSearchText] = useState(\"\");\n  const [columnVisibility, setColumnVisibility] = useState(() => {\n    const initialVisibility = {};\n    columns.forEach(column => {\n      initialVisibility[column.id] = true;\n    });\n    return initialVisibility;\n  });\n  const handleSearch = e => {\n    setSearchText(e.target.value);\n  };\n  const handleToggleColumn = columnId => {\n    setColumnVisibility(prevVisibility => ({\n      ...prevVisibility,\n      [columnId]: !prevVisibility[columnId]\n    }));\n  };\n  const filteredData = data.filter(row => columns.some(column => row[column.id] && String(row[column.id]).toLowerCase().includes(searchText.toLowerCase())));\n  const visibleColumns = columns.filter(column => columnVisibility[column.id]);\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n  const handleChangeRowsPerPage = event => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      label: \"Search\",\n      variant: \"outlined\",\n      value: searchText,\n      onChange: handleSearch,\n      style: {\n        marginBottom: 10\n      },\n      InputProps: {\n        endAdornment: /*#__PURE__*/_jsxDEV(IconButton, {\n          onClick: () => setSearchText(\"\"),\n          size: \"large\",\n          children: /*#__PURE__*/_jsxDEV(Search, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this)\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: visibleColumns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: [column.label, /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: () => handleToggleColumn(column.id),\n              size: \"large\",\n              children: columnVisibility[column.id] ? /*#__PURE__*/_jsxDEV(Visibility, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(VisibilityOff, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 17\n            }, this)]\n          }, column.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: filteredData.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((row, index) => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: visibleColumns.map(column => /*#__PURE__*/_jsxDEV(TableCell, {\n            children: row[column.id]\n          }, column.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 19\n          }, this))\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: [5, 10, 25],\n      component: \"div\",\n      count: filteredData.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n_s(ReusableTable, \"xxI9C3Uu2DJxit6joZCiy2fOuuA=\");\n_c = ReusableTable;\nexport default ReusableTable;\nvar _c;\n$RefreshReg$(_c, \"ReusableTable\");","map":{"version":3,"names":["React","useState","Table","TableHead","TableRow","TableCell","TableBody","TablePagination","IconButton","TextField","Search","Visibility","VisibilityOff","jsxDEV","_jsxDEV","ReusableTable","columns","data","_s","page","setPage","rowsPerPage","setRowsPerPage","searchText","setSearchText","columnVisibility","setColumnVisibility","initialVisibility","forEach","column","id","handleSearch","e","target","value","handleToggleColumn","columnId","prevVisibility","filteredData","filter","row","some","String","toLowerCase","includes","visibleColumns","handleChangePage","event","newPage","handleChangeRowsPerPage","parseInt","children","label","variant","onChange","style","marginBottom","InputProps","endAdornment","onClick","size","fileName","_jsxFileName","lineNumber","columnNumber","map","slice","index","rowsPerPageOptions","component","count","length","onPageChange","onRowsPerPageChange","_c","$RefreshReg$"],"sources":["C:/Users/Chennamsetty Naveen/Desktop/DESIGN/my-app/src/Components/project14/Index.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport {\r\n  Table,\r\n  TableHead,\r\n  TableRow,\r\n  TableCell,\r\n  TableBody,\r\n  TablePagination,\r\n  IconButton,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { Search, Visibility, VisibilityOff } from \"@mui/icons-material\";\r\n\r\nconst ReusableTable = ({ columns, data }) => {\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(5);\r\n  const [searchText, setSearchText] = useState(\"\");\r\n  const [columnVisibility, setColumnVisibility] = useState(() => {\r\n    const initialVisibility = {};\r\n    columns.forEach((column) => {\r\n      initialVisibility[column.id] = true;\r\n    });\r\n    return initialVisibility;\r\n  });\r\n\r\n  const handleSearch = (e) => {\r\n    setSearchText(e.target.value);\r\n  };\r\n\r\n  const handleToggleColumn = (columnId) => {\r\n    setColumnVisibility((prevVisibility) => ({\r\n      ...prevVisibility,\r\n      [columnId]: !prevVisibility[columnId],\r\n    }));\r\n  };\r\n\r\n  const filteredData = data.filter((row) =>\r\n    columns.some(\r\n      (column) =>\r\n        row[column.id] &&\r\n        String(row[column.id]).toLowerCase().includes(searchText.toLowerCase())\r\n    )\r\n  );\r\n\r\n  const visibleColumns = columns.filter(\r\n    (column) => columnVisibility[column.id]\r\n  );\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <TextField\r\n        label=\"Search\"\r\n        variant=\"outlined\"\r\n        value={searchText}\r\n        onChange={handleSearch}\r\n        style={{ marginBottom: 10 }}\r\n        InputProps={{\r\n          endAdornment: (\r\n            <IconButton onClick={() => setSearchText(\"\")} size=\"large\">\r\n              <Search />\r\n            </IconButton>\r\n          ),\r\n        }}\r\n      />\r\n      <Table>\r\n        <TableHead>\r\n          <TableRow>\r\n            {visibleColumns.map((column) => (\r\n              <TableCell key={column.id}>\r\n                {column.label}\r\n                <IconButton\r\n                  onClick={() => handleToggleColumn(column.id)}\r\n                  size=\"large\"\r\n                >\r\n                  {columnVisibility[column.id] ? (\r\n                    <Visibility />\r\n                  ) : (\r\n                    <VisibilityOff />\r\n                  )}\r\n                </IconButton>\r\n              </TableCell>\r\n            ))}\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {filteredData\r\n            .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n            .map((row, index) => (\r\n              <TableRow key={index}>\r\n                {visibleColumns.map((column) => (\r\n                  <TableCell key={column.id}>{row[column.id]}</TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n        </TableBody>\r\n      </Table>\r\n      <TablePagination\r\n        rowsPerPageOptions={[5, 10, 25]}\r\n        component=\"div\"\r\n        count={filteredData.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReusableTable;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SACEC,KAAK,EACLC,SAAS,EACTC,QAAQ,EACRC,SAAS,EACTC,SAAS,EACTC,eAAe,EACfC,UAAU,EACVC,SAAS,QACJ,eAAe;AACtB,SAASC,MAAM,EAAEC,UAAU,EAAEC,aAAa,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExE,MAAMC,aAAa,GAAGA,CAAC;EAAEC,OAAO;EAAEC;AAAK,CAAC,KAAK;EAAAC,EAAA;EAC3C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGnB,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACsB,UAAU,EAAEC,aAAa,CAAC,GAAGvB,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACwB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGzB,QAAQ,CAAC,MAAM;IAC7D,MAAM0B,iBAAiB,GAAG,CAAC,CAAC;IAC5BX,OAAO,CAACY,OAAO,CAAEC,MAAM,IAAK;MAC1BF,iBAAiB,CAACE,MAAM,CAACC,EAAE,CAAC,GAAG,IAAI;IACrC,CAAC,CAAC;IACF,OAAOH,iBAAiB;EAC1B,CAAC,CAAC;EAEF,MAAMI,YAAY,GAAIC,CAAC,IAAK;IAC1BR,aAAa,CAACQ,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EAC/B,CAAC;EAED,MAAMC,kBAAkB,GAAIC,QAAQ,IAAK;IACvCV,mBAAmB,CAAEW,cAAc,KAAM;MACvC,GAAGA,cAAc;MACjB,CAACD,QAAQ,GAAG,CAACC,cAAc,CAACD,QAAQ;IACtC,CAAC,CAAC,CAAC;EACL,CAAC;EAED,MAAME,YAAY,GAAGrB,IAAI,CAACsB,MAAM,CAAEC,GAAG,IACnCxB,OAAO,CAACyB,IAAI,CACTZ,MAAM,IACLW,GAAG,CAACX,MAAM,CAACC,EAAE,CAAC,IACdY,MAAM,CAACF,GAAG,CAACX,MAAM,CAACC,EAAE,CAAC,CAAC,CAACa,WAAW,CAAC,CAAC,CAACC,QAAQ,CAACrB,UAAU,CAACoB,WAAW,CAAC,CAAC,CAC1E,CACF,CAAC;EAED,MAAME,cAAc,GAAG7B,OAAO,CAACuB,MAAM,CAClCV,MAAM,IAAKJ,gBAAgB,CAACI,MAAM,CAACC,EAAE,CACxC,CAAC;EAED,MAAMgB,gBAAgB,GAAGA,CAACC,KAAK,EAAEC,OAAO,KAAK;IAC3C5B,OAAO,CAAC4B,OAAO,CAAC;EAClB,CAAC;EAED,MAAMC,uBAAuB,GAAIF,KAAK,IAAK;IACzCzB,cAAc,CAAC4B,QAAQ,CAACH,KAAK,CAACd,MAAM,CAACC,KAAK,EAAE,EAAE,CAAC,CAAC;IAChDd,OAAO,CAAC,CAAC,CAAC;EACZ,CAAC;EAED,oBACEN,OAAA;IAAAqC,QAAA,gBACErC,OAAA,CAACL,SAAS;MACR2C,KAAK,EAAC,QAAQ;MACdC,OAAO,EAAC,UAAU;MAClBnB,KAAK,EAAEX,UAAW;MAClB+B,QAAQ,EAAEvB,YAAa;MACvBwB,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAG,CAAE;MAC5BC,UAAU,EAAE;QACVC,YAAY,eACV5C,OAAA,CAACN,UAAU;UAACmD,OAAO,EAAEA,CAAA,KAAMnC,aAAa,CAAC,EAAE,CAAE;UAACoC,IAAI,EAAC,OAAO;UAAAT,QAAA,eACxDrC,OAAA,CAACJ,MAAM;YAAAmD,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACA;MAEhB;IAAE;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACFlD,OAAA,CAACZ,KAAK;MAAAiD,QAAA,gBACJrC,OAAA,CAACX,SAAS;QAAAgD,QAAA,eACRrC,OAAA,CAACV,QAAQ;UAAA+C,QAAA,EACNN,cAAc,CAACoB,GAAG,CAAEpC,MAAM,iBACzBf,OAAA,CAACT,SAAS;YAAA8C,QAAA,GACPtB,MAAM,CAACuB,KAAK,eACbtC,OAAA,CAACN,UAAU;cACTmD,OAAO,EAAEA,CAAA,KAAMxB,kBAAkB,CAACN,MAAM,CAACC,EAAE,CAAE;cAC7C8B,IAAI,EAAC,OAAO;cAAAT,QAAA,EAEX1B,gBAAgB,CAACI,MAAM,CAACC,EAAE,CAAC,gBAC1BhB,OAAA,CAACH,UAAU;gBAAAkD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,gBAEdlD,OAAA,CAACF,aAAa;gBAAAiD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE;YACjB;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACS,CAAC;UAAA,GAXCnC,MAAM,CAACC,EAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAYd,CACZ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACM;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC,eACZlD,OAAA,CAACR,SAAS;QAAA6C,QAAA,EACPb,YAAY,CACV4B,KAAK,CAAC/C,IAAI,GAAGE,WAAW,EAAEF,IAAI,GAAGE,WAAW,GAAGA,WAAW,CAAC,CAC3D4C,GAAG,CAAC,CAACzB,GAAG,EAAE2B,KAAK,kBACdrD,OAAA,CAACV,QAAQ;UAAA+C,QAAA,EACNN,cAAc,CAACoB,GAAG,CAAEpC,MAAM,iBACzBf,OAAA,CAACT,SAAS;YAAA8C,QAAA,EAAkBX,GAAG,CAACX,MAAM,CAACC,EAAE;UAAC,GAA1BD,MAAM,CAACC,EAAE;YAAA+B,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAA6B,CACvD;QAAC,GAHWG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAIV,CACX;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACP,CAAC,eACRlD,OAAA,CAACP,eAAe;MACd6D,kBAAkB,EAAE,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAE;MAChCC,SAAS,EAAC,KAAK;MACfC,KAAK,EAAEhC,YAAY,CAACiC,MAAO;MAC3BlD,WAAW,EAAEA,WAAY;MACzBF,IAAI,EAAEA,IAAK;MACXqD,YAAY,EAAE1B,gBAAiB;MAC/B2B,mBAAmB,EAAExB;IAAwB;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAAC9C,EAAA,CAvGIH,aAAa;AAAA2D,EAAA,GAAb3D,aAAa;AAyGnB,eAAeA,aAAa;AAAC,IAAA2D,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}